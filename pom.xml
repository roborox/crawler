<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ru.roborox.crawler</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <url>${nexus.url}/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>${nexus.url}/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <properties>
        <kotlin.version>1.3.50</kotlin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <rpm.user.name>roborox</rpm.user.name>

        <spring-data-mongodb.version>2.2.0.RELEASE</spring-data-mongodb.version>
        <spring.version>5.2.0.RELEASE</spring.version>
        <mongodb-driver.version>3.11.0</mongodb-driver.version>
        <mongodb-driver-reactivestreams.version>1.12.0</mongodb-driver-reactivestreams.version>
        <quartz-mongodb.version>2.1.0</quartz-mongodb.version>
        <reactor-netty.version>0.9.1.RELEASE</reactor-netty.version>
        <jackson-databind.version>2.10.0</jackson-databind.version>
        <jackson.version>2.10.0</jackson.version>
        <testng.version>6.9.6</testng.version>
        <slf4j.version>1.7.26</slf4j.version>
        <reactor-core.version>3.3.0.RELEASE</reactor-core.version>
        <reactor-kotlin-extensions.version>1.0.0.RELEASE</reactor-kotlin-extensions.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <mockito.version>1.9.0</mockito.version>
        <logback.version>1.2.3</logback.version>
        <spring-boot-plugin.version>1.5.8.RELEASE</spring-boot-plugin.version>
        <roborox.scripts.version>1.0-SNAPSHOT</roborox.scripts.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.kotlin</groupId>
                <artifactId>reactor-kotlin-extensions</artifactId>
                <version>${reactor-kotlin-extensions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webflux</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.netty</groupId>
                <artifactId>reactor-netty</artifactId>
                <version>${reactor-netty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-mongodb</artifactId>
                <version>${spring-data-mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-reactivestreams</artifactId>
                <version>${mongodb-driver-reactivestreams.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <classifier>boot</classifier>
                        <finalName>${project.artifactId}</finalName>
                        <outputDirectory>target/${project.artifactId}/lib</outputDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>ru.roborox.plugin</groupId>
                    <artifactId>roborox-scripts-plugin</artifactId>
                    <version>${roborox.scripts.version}</version>
                    <executions>
                        <execution>
                            <id>roborox-scripts</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>generate-scripts</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>2.1.5</version>
                    <configuration>
                        <defaultUsername>${rpm.user.name}</defaultUsername>
                        <defaultGroupname>${rpm.user.name}</defaultGroupname>
                        <defaultFilemode>755</defaultFilemode>
                        <group>Applications/Java</group>
                        <targetOS>linux</targetOS>
                        <needarch>noarch</needarch>
                        <name>${rpm.user.name}-${project.artifactId}</name>
                        <mappings>
                            <mapping>
                                <username>${rpm.user.name}</username>
                                <groupname>${rpm.user.name}</groupname>
                                <directory>
                                    ${base.path}/${rpm.user.name}/${rpm.user.name}-${project.artifactId}-${project.version}
                                </directory>
                                <sources>
                                    <source>
                                        <location>target/${project.artifactId}</location>
                                    </source>
                                    <softlinkSource>
                                        <destination>logs</destination>
                                        <location>${logs.directory}</location>
                                    </softlinkSource>
                                    <softlinkSource>
                                        <destination>pid</destination>
                                        <location>${pid.directory}</location>
                                    </softlinkSource>
                                    <softlinkSource>
                                        <destination>tmp</destination>
                                        <location>${tmp.directory}</location>
                                    </softlinkSource>
                                    <softlinkSource>
                                        <destination>conf</destination>
                                        <location>${etc.directory}</location>
                                    </softlinkSource>
                                </sources>
                            </mapping>
                            <mapping>
                                <username>${rpm.user.name}</username>
                                <groupname>${rpm.user.name}</groupname>
                                <directory>/etc/init.d</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <sources>
                                    <source>
                                        <destination>${rpm.user.name}-${project.artifactId}</destination>
                                        <location>target/rpm-scripts/service.sh</location>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <username>${rpm.user.name}</username>
                                <groupname>${rpm.user.name}</groupname>
                                <directory>/etc/rc.d/init.d</directory>
                                <directoryIncluded>false</directoryIncluded>
                                <sources>
                                    <source>
                                        <destination>${rpm.user.name}-${project.artifactId}</destination>
                                        <location>target/rpm-scripts/service.sh</location>
                                    </source>
                                </sources>
                            </mapping>
                        </mappings>
                        <preinstallScriptlet>
                            <scriptFile>target/rpm-scripts/preinstall.sh</scriptFile>
                        </preinstallScriptlet>
                        <postinstallScriptlet>
                            <scriptFile>target/rpm-scripts/postinstall.sh</scriptFile>
                        </postinstallScriptlet>
                        <preremoveScriptlet>
                            <scriptFile>target/rpm-scripts/preremove.sh</scriptFile>
                        </preremoveScriptlet>
                        <postremoveScriptlet>
                            <scriptFile>target/rpm-scripts/postremove.sh</scriptFile>
                        </postremoveScriptlet>
                        <requires>
                            <require>jdk</require>
                            <require>subversion</require>
                        </requires>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                            <phase>install</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                        <jvmTarget>1.8</jvmTarget>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <executions>
                        <!-- Replacing default-compile as it is treated specially by maven -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Replacing default-testCompile as it is treated specially by maven -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <modules>
        <module>persist</module>
        <module>crawler</module>
        <module>test-common</module>
        <module>domain</module>
        <module>quartz</module>
        <module>gridfs</module>
        <module>logging</module>
        <module>api</module>
        <module>common</module>
    </modules>
</project>
